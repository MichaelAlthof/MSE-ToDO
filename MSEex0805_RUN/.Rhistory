v=seq(-3, -0.01,0.01)
y=0.8 * v - 0.5 *log (-0.5 / v) +0.4;
plot(v,y,"l",col="blue",cex.lab=1.5,cex.axis=1.5)
x=seq(0.01, 0.3,0.01)
y = -0.4 / x - 0.5 * log (x) + 0.4;
plot(x,y,"l",col="blue")
setwd("~/GitHub/MSE-ToDO/MSElinregvocab")
# clear variables, close windows
rm(list=ls(all=TRUE))
graphics.off()
load("vocabulary.rda")
names(vocabulary)=c("grade8","grade9","grade10","grade11","mean")
res1=lm(grade11~grade8+grade9+grade10,data=vocabulary)
res2=lm(grade11~grade9+grade10,data=vocabulary)
print(summary(res1))
print(summary(res2))
setwd("~/GitHub/MSE-ToDO/MSElogit")
#Close windows and clear variables
graphics.off()
rm(list=ls(all=TRUE))
install.packages('MASS')
library(MASS)
setwd("C:/...")
file  <- read.csv("kredit.csv",sep=';',dec='.') #load credit data
y <- 1-file$kredit        # default set to 1
prev    <- (file$moral >2)+0                            # previous loans were OK
employ  <- (file$beszeit >1)+0                          # employed (>=1 year)
dura    <- (file$laufzeit)                              # duration
d9.12   <- ((file$laufzeit >9)&(file$laufzeit <=12)) +0 #  9 < duration <= 12
d12.18  <- ((file$laufzeit >12)&(file$laufzeit <=18))+0 # 12 < duration <= 18
d18.24  <- ((file$laufzeit >18)&(file$laufzeit <=24))+0 # 18 < duration <= 24
d24     <- (file$laufzeit >24)+0                        # 24 < duration
amount  <- file$hoehe                                   # amount of loan
age     <- file$alter                                   # age of applicant
savings <- (file$sparkont > 4)+0                        # savings >= 1000 DM
phone   <- (file$telef==1)+0                            # applicant has telephone
foreign <- (file$gastarb==1)+0                          # non-german citizen
purpose <- ((file$verw==1)|(file$verw==2))+0            # loan is for a car
house   <- (file$verm==4)+0                             # house owner
# Logit: dependence on several rating factors (with model choice)
g11<-glm(y~ age + amount + prev +d9.12 + d12.18 + d18.24 +d24 + savings + purpose +house ,family=binomial)
summary(g11)
# model choice
s11<-stepAIC(g11)
s11$anova
summary(s11)
# show est. PDs
s11$null.deviance-s11$deviance
s11$df.null-s11$df.residual
dchisq(s11$null.deviance-s11$deviance, s11$df.null-s11$df.residual)
#probability
s11$fitted.values
#scores
scores<- log(s11$fitted.values /(1-s11$fitted.values))
#combined curve
win.graph()
plot(scores,y,xlab="scores",ylab="Y",pch=16,col="red",cex.lab=1.5,cex.axis=1.5)
par(new=TRUE)
plot(sort(scores),sort(s11$fitted.values),xlab="scores",ylab="Y",ylim=c(0,1),pch=16,col="blue",cex.lab=1.5,cex.axis=1.5,'l', lw='4')
setwd("~/GitHub/MSE-ToDO/MSElogit")
#Close windows and clear variables
graphics.off()
rm(list=ls(all=TRUE))
# install.packages('MASS')
library(MASS)
#setwd("C:/...")
file  <- read.csv("kredit.csv",sep=';',dec='.') #load credit data
y <- 1-file$kredit        # default set to 1
prev    <- (file$moral >2)+0                            # previous loans were OK
employ  <- (file$beszeit >1)+0                          # employed (>=1 year)
dura    <- (file$laufzeit)                              # duration
d9.12   <- ((file$laufzeit >9)&(file$laufzeit <=12)) +0 #  9 < duration <= 12
d12.18  <- ((file$laufzeit >12)&(file$laufzeit <=18))+0 # 12 < duration <= 18
d18.24  <- ((file$laufzeit >18)&(file$laufzeit <=24))+0 # 18 < duration <= 24
d24     <- (file$laufzeit >24)+0                        # 24 < duration
amount  <- file$hoehe                                   # amount of loan
age     <- file$alter                                   # age of applicant
savings <- (file$sparkont > 4)+0                        # savings >= 1000 DM
phone   <- (file$telef==1)+0                            # applicant has telephone
foreign <- (file$gastarb==1)+0                          # non-german citizen
purpose <- ((file$verw==1)|(file$verw==2))+0            # loan is for a car
house   <- (file$verm==4)+0                             # house owner
# Logit: dependence on several rating factors (with model choice)
g11<-glm(y~ age + amount + prev +d9.12 + d12.18 + d18.24 +d24 + savings + purpose +house ,family=binomial)
summary(g11)
# model choice
s11<-stepAIC(g11)
s11$anova
summary(s11)
# show est. PDs
s11$null.deviance-s11$deviance
s11$df.null-s11$df.residual
dchisq(s11$null.deviance-s11$deviance, s11$df.null-s11$df.residual)
#probability
s11$fitted.values
#scores
scores<- log(s11$fitted.values /(1-s11$fitted.values))
#combined curve
win.graph()
plot(scores,y,xlab="scores",ylab="Y",pch=16,col="red",cex.lab=1.5,cex.axis=1.5)
par(new=TRUE)
plot(sort(scores),sort(s11$fitted.values),xlab="scores",ylab="Y",ylim=c(0,1),pch=16,col="blue",cex.lab=1.5,cex.axis=1.5,'l', lw='4')
rm(list = ls(all = TRUE))
install.packages("scatterplot3d")
library(scatterplot3d)
n			= 100
m			= 1000
theta		= c(1, 1)
theta2		= c(1.7, 1)
theta_star	= c(0, 0)
D2			= matrix(c(3, 1, 1, 2), nrow = 2)
D			= eigen(D2)$vectors %*% diag(sqrt(eigen(D2)$values)) %*% t(eigen(D2)$vectors)
z			= (1/sqrt(n)) * solve(D) %*% matrix(rnorm(2 * m), nrow = 2)
aa			= n * t(D %*% (theta - theta_star)) %*% (D %*% (theta - theta_star))
aa2			= n * t(D %*% (theta2 - theta_star)) %*% (D %*% (theta2 - theta_star))
aa			= as.numeric(aa)
aa2			= as.numeric(aa2)
L			= n * t(theta - theta_star) %*% D2 %*% z - aa * matrix(1, 1, m)/2
L2			= n * t(theta2 - theta_star) %*% D2 %*% z - aa2 * matrix(1, 1, m)/2
LLR			= t(rbind(z[1, ], z[2, ], L))
LLR2		= t(rbind(z[1, ], z[2, ], L2))
layout(matrix(1:4, 2, 2))
plot(density(L, bw = 6), lwd = 3)
plot(density(L2, bw = 6), lwd = 3, col = "blue")
axlim = c(-1, 1)
scatterplot3d(LLR, xlim = axlim, ylim = axlim)
scatterplot3d(LLR2, xlim = axlim, ylim = axlim)
#Close windows and clear variables
graphics.off()
rm(list=ls(all=TRUE))
#install.packages('MASS')
library(MASS)
#setwd("C:/...")
file  <- read.csv("kredit.csv",sep=';',dec='.') #load credit data
y <- 1-file$kredit        # default set to 1
prev    <- (file$moral >2)+0                            # previous loans were OK
employ  <- (file$beszeit >1)+0                          # employed (>=1 year)
dura    <- (file$laufzeit)                              # duration
d9.12   <- ((file$laufzeit >9)&(file$laufzeit <=12)) +0 #  9 < duration <= 12
d12.18  <- ((file$laufzeit >12)&(file$laufzeit <=18))+0 # 12 < duration <= 18
d18.24  <- ((file$laufzeit >18)&(file$laufzeit <=24))+0 # 18 < duration <= 24
d24     <- (file$laufzeit >24)+0                        # 24 < duration
amount  <- file$hoehe                                   # amount of loan
age     <- file$alter                                   # age of applicant
savings <- (file$sparkont > 4)+0                        # savings >= 1000 DM
phone   <- (file$telef==1)+0                            # applicant has telephone
foreign <- (file$gastarb==1)+0                          # non-german citizen
purpose <- ((file$verw==1)|(file$verw==2))+0            # loan is for a car
house   <- (file$verm==4)+0                             # house owner
# Logit: dependence on several rating factors (with model choice)
g11<-glm(y~ age + amount + prev +d9.12 + d12.18 + d18.24 +d24 + savings + purpose +house ,family=binomial)
summary(g11)
# model choice
s11<-stepAIC(g11)
s11$anova
summary(s11)
# show est. PDs
s11$null.deviance-s11$deviance
s11$df.null-s11$df.residual
dchisq(s11$null.deviance-s11$deviance, s11$df.null-s11$df.residual)
#probability
s11$fitted.values
#scores
scores<- log(s11$fitted.values /(1-s11$fitted.values))
#calculationg required probabilities to plot loreny curve)
A=cbind(scores,y) #data frame consisiting of scores and y values
n=length(scores)  #number of observations
n1=sum(y==1) #number of observations which are default
l=1000 #desired length of sequence
s1=seq(min(scores),max(scores),length.out=l) #seq of s's
s=c(s1,(max(scores)+1))  #some modification to get prob 1
#define vectors and matrices
prop1=rep(0,length(s))
prop2=rep(0,length(s))
for (i in 1:length(s)){
prop1[i]=length(which(scores<s[i]))/n
prop2[i]=length(which(scores<s[i]&y==1))/n1
}
prop1  #xaxis
prop2  #yaxis
#lorenz curve
win.graph()
plot(prop1,prop2,xlab="P(S<s)",ylab="P(S<s|Y=1)",lwd=2,pch=16, col="red",type="l",cex.lab=1.25,cex.axis=1.25)
par(new=TRUE)
abline(0,1)
n_1=300
obs=rt(n_1,3)
den_x=density(obs,kernel="gaussian",bw="nrd0")
plot(den_x,lwd=4,lty=1,col="blue",cex.axis=1.2,font.axis=1, cex.lab=1.5,las=0,xlab="x", ylab="f(x)", main="")
n=1000000
z=rt(n,3)
h=den_x$bw
g=1:512
for(j in 1:length(den_x$x)){
sum_k=0
for(i in 1:length(z)){
u=(den_x$x[j]-z[i])/h
k=exp(-u^2/2)/sqrt(2*pi)
sum_k=sum_k+k
}
g[j]=1/(h*length(z))*sum_k
}
n_1
obs=rnorm(n_1,0,1)
den_x=density(obs,kernel="gaussian",bw="nrd0")
plot(den_x,lwd=4,lty=1,col="blue",cex.axis=1.2,font.axis=1, cex.lab=1.5,las=0,xlab="x", ylab="f(x)", main="")
n=1000000
z=rt(n,3)
h=den_x$bw
g=1:512
for(j in 1:length(den_x$x)){
sum_k=0
for(i in 1:length(z)){
u=(den_x$x[j]-z[i])/h
k=exp(-u^2/2)/sqrt(2*pi)
sum_k=sum_k+k
}
g[j]=1/(h*length(z))*sum_k
}
library(boot)
library(pastecs)
library(graphics)
file  <- "spq"
datafile = paste(file,"txt",sep = ".")
quarterly 	= read.table(datafile,sep="",dec=",")
colnms 	<- c ( "date" ,"year","price")
colnames(quarterly) <- colnms
attach(quarterly)
return = diff(log(price))
n 	 = length(diff(log(price)))
par(mai=c(1, 1.3, 1, 1))
qqnorm(return,cex.axis = 2.2,cex.main = 2.8,cex = 2.5,col="red",bg="red",cex.lab = 2.8,pch=21,ann = FALSE,axes=FALSE,frame=TRUE)
qqline(return, col = 4,lwd =3)
mtext(side = 3, text = "Normal Q-Q plot", line = 1,cex=2.8)
mtext(side = 1, text = "Theoretical Quantiles", line = 4,cex=2.5)
mtext(side = 2, text = "Sample Quantiles", line = 4,cex=2.5)
axis(side=2, at=seq(-0.4, 0.3, by = 0.05), label=seq(-0.4, 0.3, by = 0.05), lwd=1.2,cex.axis=2.5,lwd.ticks = 2.5)
axis(side=1, at=seq(-3,3, by=1), label=seq(-3,3, by=1), lwd=1,cex.axis=2.5,padj=0.5,lwd.ticks = 2.5)
library(boot)
library(pastecs)
library(graphics)
install.packages("boot")
install.packages("boot")
install.packages("boot")
install.packages("pastecs")
install.packages("boot")
# install.packages("boot")
# install.packages("pastecs")
# install.packages("graphics")
library(boot)
library(pastecs)
library(graphics)
file  <- "spq"
datafile = paste(file,"txt",sep = ".")
quarterly 	= read.table(datafile,sep="",dec=",")
colnms 	<- c ( "date" ,"year","price")
colnames(quarterly) <- colnms
attach(quarterly)
return = diff(log(price))
n 	 = length(diff(log(price)))
par(mai=c(1, 1.3, 1, 1))
qqnorm(return,cex.axis = 2.2,cex.main = 2.8,cex = 2.5,col="red",bg="red",cex.lab = 2.8,pch=21,ann = FALSE,axes=FALSE,frame=TRUE)
qqline(return, col = 4,lwd =3)
mtext(side = 3, text = "Normal Q-Q plot", line = 1,cex=2.8)
mtext(side = 1, text = "Theoretical Quantiles", line = 4,cex=2.5)
mtext(side = 2, text = "Sample Quantiles", line = 4,cex=2.5)
axis(side=2, at=seq(-0.4, 0.3, by = 0.05), label=seq(-0.4, 0.3, by = 0.05), lwd=1.2,cex.axis=2.5,lwd.ticks = 2.5)
axis(side=1, at=seq(-3,3, by=1), label=seq(-3,3, by=1), lwd=1,cex.axis=2.5,padj=0.5,lwd.ticks = 2.5)
# install.packages("boot")
# install.packages("pastecs")
# install.packages("graphics")
library(boot)
library(pastecs)
library(graphics)
file  <- "spq"
datafile = paste(file,"txt",sep = ".")
quarterly 	= read.table(datafile,sep="",dec=",")
colnms 	<- c ( "date" ,"year","price")
colnames(quarterly) <- colnms
attach(quarterly)
return = diff(log(price))
n 	 = length(diff(log(price)))
par(mai=c(1, 1.3, 1, 1))
qqnorm(return,cex.axis = 2.2,cex.main = 2.8,cex = 2.5,col="red",bg="red",cex.lab = 2.8,pch=21,ann = FALSE,axes=FALSE,frame=TRUE)
qqline(return, col = 4,lwd =3)
mtext(side = 3, text = "Normal Q-Q plot", line = 1,cex=2.8)
mtext(side = 1, text = "Theoretical Quantiles", line = 4,cex=2.5)
mtext(side = 2, text = "Sample Quantiles", line = 4,cex=2.5)
axis(side=2, at=seq(-0.4, 0.3, by = 0.05), label=seq(-0.4, 0.3, by = 0.05), lwd=1.2,cex.axis=2.5,lwd.ticks = 2.5)
axis(side=1, at=seq(-3,3, by=1), label=seq(-3,3, by=1), lwd=1,cex.axis=2.5,padj=0.5,lwd.ticks = 2.5)
setwd("~/GitHub/MSE-ToDO/MSEqlretqqplot")
# install.packages("boot")
# install.packages("pastecs")
# install.packages("graphics")
library(boot)
library(pastecs)
library(graphics)
file  <- "spq"
datafile = paste(file,"txt",sep = ".")
quarterly 	= read.table(datafile,sep="",dec=",")
colnms 	<- c ( "date" ,"year","price")
colnames(quarterly) <- colnms
attach(quarterly)
return = diff(log(price))
n 	 = length(diff(log(price)))
par(mai=c(1, 1.3, 1, 1))
qqnorm(return,cex.axis = 2.2,cex.main = 2.8,cex = 2.5,col="red",bg="red",cex.lab = 2.8,pch=21,ann = FALSE,axes=FALSE,frame=TRUE)
qqline(return, col = 4,lwd =3)
mtext(side = 3, text = "Normal Q-Q plot", line = 1,cex=2.8)
mtext(side = 1, text = "Theoretical Quantiles", line = 4,cex=2.5)
mtext(side = 2, text = "Sample Quantiles", line = 4,cex=2.5)
axis(side=2, at=seq(-0.4, 0.3, by = 0.05), label=seq(-0.4, 0.3, by = 0.05), lwd=1.2,cex.axis=2.5,lwd.ticks = 2.5)
axis(side=1, at=seq(-3,3, by=1), label=seq(-3,3, by=1), lwd=1,cex.axis=2.5,padj=0.5,lwd.ticks = 2.5)
sum_b=0
for (iter  in 1:400){
n=300
x=runif(n,0,1)
e=rnorm(n,0,0.1)
u=rnorm(n,0,0.3)
z=x+u
y=2*x+e
lm.y=lm(y~x)
summary(lm.y)
lm.z=lm(y~z)
summary(lm.z)
plot(z, y,cex.axis=1.2,font.axis=1, cex.lab=1.5,las=1,xlab=c(expression(paste(psi, ", z"))),ylab="y")
abline(lm.z, lwd=4,lty=1,col="red")
abline(lm.y, lwd=4,lty=2,col="blue")
b=summary(lm.z)$coef[2]
sum_b=(sum_b+b)
}
1/400*sum_b
setwd("~/GitHub/MSE-ToDO/MSEspqlogret")
# install.packages("boot")
# install.packages("pastecs")
# install.packages("graphics")
library(boot)
library(pastecs)
library(graphics)
file  <- "spq"
datafile = paste(file,"txt",sep = ".")
quarterly = read.table(datafile,sep="",dec=",")
colnms 	<- c("date", "year", "price")
colnames(quarterly) <- colnms
attach(quarterly)
return = diff(log(price))
n = length(diff(log(price)))
par(mai=c(1.4, 1.5, 1, 1))
plot(return,col="red3", type="l",  xlim=c(0,n), ylim=c(min(return),max(return)), axes=FALSE, frame=TRUE,lwd=3,cex.main = 2.8, ann = FALSE)
mtext(side = 3, text = "S&P 500 Index quarterly log-returns", line = 1, cex=2)
mtext(side = 1, text = "Time", line = 5, cex=2)
mtext(side = 2, text = "Quarterly log-returns", line = 4, cex=2)
axis(side=2, at=seq(-0.4, 0.3, by = 0.05), label=seq(-0.4, 0.3, by = 0.05), lwd=1.2,cex.axis=2, lwd.ticks = 2)
axis(side=1, at=c(1,16,32,48,64,80,96,112,128), label=c('1980','1984','1988','1992','1996','2000','2004','2008','2012'), lwd=1, cex.axis=2, padj=0.55, lwd.ticks = 2)
# clear variables and close windows
rm(list=ls(all=TRUE))
graphics.off()
## part A
s1 = matrix(c(
0.812,-0.229,-0.034,0.073,
-0.229,1.001,0.010,-0.059,
-0.034,0.010,1.078,-0.098,
0.073,-0.059,-0.098,0.823
),ncol=4,nrow=4)
s2 = matrix(c(
0.559,-0.057,-0.271,0.306,
-0.057,1.237,0.181,0.021,
-0.271,0.181,1.159,-0.130,
0.306,0.021,-0.130,0.683
),ncol=4,nrow=4)
n1 = 30
n2 = 20
n = n1+n2
s = (n1*s1+n2*s2)/n
tst = n*log(det(s))-n1*log(det(s1))-n2*log(det(s2))
crt.val = qchisq(0.95,10)
print(tst)
print(crt.val)
## part B
s1 = matrix(c(
21.907 , 1.415 , -2.050 , 2.379,
1.415 , 11.853 , 2.104 , -1.864 ,
-2.050 , 2.104 , 17.230 , 0.905,
2.379 ,  -1.864 , 0.905 , 9.037
),ncol=4,nrow=4)
s2 = matrix(c(
20.349 , -9.463 , 0.958 , -6.507 ,
-9.463 , 15.502 , -3.383 , -2.551,
0.958 , -3.383 , 14.470 , -0.323,
-6.507 , -2.551 , -0.323 , 10.311
),ncol=4,nrow=4)
n1 = 30
n2 = 20
n = n1+n2
s = (n1*s1+n2*s2)/n
tst = n*log(det(s))-n1*log(det(s1))-n2*log(det(s2))
crt.val = qchisq(0.95,10)
print(tst)
print(crt.val)
## part C
s1 = matrix(c(
14.649 , -0.024 , 1.248 , -3.961,
-0.024 , 15.825 , 0.746 , 4.301,
1.248 , 0.746 , 9.446 , 1.241,
-3.961 , 4.301 , 1.241 , 20.002
),ncol=4,nrow=4)
s2 = matrix(c(
14.035 , -2.372 , 5.596 , -1.601,
-2.372 , 9.173 , -2.027 , -2.954,
5.596 , -2.027 , 9.021 , -1.301,
-1.601 , -2.954 , -1.301 , 9.593
),ncol=4,nrow=4)
n1 = 30
n2 = 20
n = n1+n2
s = (n1*s1+n2*s2)/n
tst = n*log(det(s))-n1*log(det(s1))-n2*log(det(s2))
crt.val = qchisq(0.95,10)
print(tst)
print(crt.val)
rm(list=ls(all=TRUE))
graphics.off()
#load packages
install.packages("depth")
install.packages("localdepth")
install.packages("MASS")
library(depth)
library(localdepth)
library(MASS)
# simulate data
set.seed(2007)
n = 10
a = runif(n,0,1)*pi*2
x = cbind(cos(a),sin(a))
x = x + 0.1*mvrnorm(n,c(0,0),Sigma=matrix(c(1,0,0,1),2,2))
x = rbind(x,c(0.4,0.5))
# estimate the location by simdep
m   = med(x,method="Liu")
mm  = m$median #the two-dimensional median
#computes the size of the simplices formed from x and returns the corresponding quantiles
tau = quantile.localdepth(x,probs=0.1,size=TRUE,use="volume")
#computes the depth and the local depth for the set of points of x
ld  = localdepth(x,tau=tau$quantile,method="simplicial",use="volume")
dep = ld$depth #vector of the depth values
med12 = apply(x,2,median)
dep = 165*apply(x,1,depth,x,"Liu")
col = round(4*dep/max(dep))
par(c(1,1),cex=1.2)
#1 is a circle, 2 is a triangle, 3 is a cross, 4 is a X-symbol, 5 is a rhombus, 6 is an inverted triangle, 15 is a filled rectangle, 16 is a filled circle, 17 is a filled triangle, 18 is a filled rectangle
col=4*(col==1)+2*(col==2)+1*(col==3)+5*(col==4)+6*(col==5)+3*(col==6)+15*(col==7)+16*(col==8)+17*(col==9)+18*(col==10)
plot(x,pch=col,col="blue",xlab="X",ylab="Y",main="Simplicial depth",xlim=c(-1.2,1.2),ylim=c(-1.2,1.2),lwd=3)
#median is the big red star
points(mm[1],mm[2],col="red",pch=8,cex=3,lwd=1.5)
points(med12[1],med12[2],col="blue",pch=2,cex=3,lwd=2)
dep
setwd("~/GitHub/MSE-ToDO/MSEex0805_RUN")
install.packages("foreign")
library("foreign")
das <- read.csv("data_DAX091222-111222.csv")
d <- seq(from = as.Date("2009-12-22"), to = as.Date("2011-12-21"), length.out = 514)
plot(das ~ d, xlab = "Time", ylab = "DAX30 Index", pch = 20, cex = 1, cex.axis = 1.2, cex.lab = 1.5, lab = c(3, 3, 0), main = "",
col = "blue4")
plot(das ~ d) #, xlab = "Time", ylab = "DAX30 Index", pch = 20, cex = 1, cex.axis = 1.2, cex.lab = 1.5, lab = c(3, 3, 0), main = "",
col = "blue4")
install.packages("foreign")
library("foreign")
das <- read.csv("data_DAX091222-111222.csv")
d <- seq(from = as.Date("2009-12-22"), to = as.Date("2011-12-21"), length.out = 514)
plot(das ~ d, xlab = "Time", ylab = "DAX30 Index", pch = 20, cex = 1, cex.axis = 1.2, cex.lab = 1.5, lab = c(3, 3, 0), main = "", col = "blue4")
plot(das ~ d, xlab = "Time", ylab = "DAX30 Index", pch = 20, cex = 1, cex.axis = 1.2, cex.lab = 1.5, lab = c(3, 3, 0), main = "",
col = "blue4")
install.packages("foreign")
library("foreign")
das <- read.csv("data_DAX091222-111222.csv")
d <- seq(from = as.Date("2009-12-22"), to = as.Date("2011-12-21"), length.out = 514)
plot(das ~ d, xlab = "Time", ylab = "DAX30 Index", pch = 20, cex = 1, cex.axis = 1.2, cex.lab = 1.5, lab = c(3, 3, 0), main = "", col = "blue4")
plot(das ~ d, xlab = "Time", ylab = "DAX30 Index", pch = 20, cex = 1, cex.axis = 1.2, cex.lab = 1.5, lab = c(3, 3, 0), main = "",
col = "blue4")
library("foreign")
das <- read.csv("data_DAX091222-111222.csv")
d <- seq(from = as.Date("2009-12-22"), to = as.Date("2011-12-21"), length.out = 514)
plot(das ~ d, xlab = "Time", ylab = "DAX30 Index", pch = 20, cex = 1, cex.axis = 1.2, cex.lab = 1.5, lab = c(3, 3, 0), main = "", col = "blue4")
plot(das ~ d, xlab = "Time", ylab = "DAX30 Index", pch = 20, cex = 1, cex.axis = 1.2, cex.lab = 1.5, lab = c(3, 3, 0), main = "",  col = "blue4")
